name: Debug CI/CD Pipeline

on:
  push:
    branches:
      - Debug
  pull_request:

env:
  DOTNET_VERSION: "9.0.x"
  RESULTS_DIR: "${{ github.workspace }}/TestResults"
  BENCHMARK_ARTIFACTS_ROOT: "${{ github.workspace }}/BenchmarkArtifacts"
  BENCHMARK_LOGS_ROOT: "${{ github.workspace }}/BenchmarkLogs"
  BENCHMARK_RESULTS_DIR: "${{ github.workspace }}/BenchmarkResults"
  BENCHMARK_SUMMARIES_ROOT: "${{ github.workspace }}/BenchmarkSummaries"
  PR_SUMMARY_PATH: "${{ github.workspace }}/benchmark-summary.md"
  PROJECT_DIR: "${{ github.workspace }}/Src"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository with Submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Debug - Verify Installed .NET Version
        run: dotnet --version

      - name: Debug - Environment Variables
        run: |
          echo "GITHUB_WORKSPACE: ${{ github.workspace }}"
          echo "BENCHMARK_ARTIFACTS_ROOT: ${{ env.BENCHMARK_ARTIFACTS_ROOT }}"
          echo "BENCHMARK_LOGS_ROOT: ${{ env.BENCHMARK_LOGS_ROOT }}"
          echo "BENCHMARK_SUMMARIES_ROOT: ${{ env.BENCHMARK_SUMMARIES_ROOT }}"
          echo "BENCHMARK_RESULTS_DIR: ${{ env.BENCHMARK_RESULTS_DIR }}"
          echo "PROJECT_DIR: ${{ env.PROJECT_DIR }}"
          echo "RESULTS_DIR: ${{ env.RESULTS_DIR }}"
          echo "PR_SUMMARY_PATH: ${{ env.PR_SUMMARY_PATH }}"
          echo "RUNNER_OS: ${{ runner.os }}"
          echo "RUNNER_WORKSPACE: ${{ runner.workspace }}"
          echo "RUNNER_TEMP: ${{ runner.temp }}"
          env | grep BENCHMARK

      - name: Ensure Benchmark Directories Exist
        run: |
          if [ -n "${{ env.BENCHMARK_ARTIFACTS_ROOT }}" ]; then
            mkdir -p "${{ env.BENCHMARK_ARTIFACTS_ROOT }}"
          else
            echo "BENCHMARK_ARTIFACTS_ROOT is empty! Skipping mkdir."
          fi

      - name: Ensure Benchmark Directories Exist - old version
        run: |
          [ -n "${{ env.BENCHMARK_ARTIFACTS_ROOT }}" ] && mkdir -p "${{ env.BENCHMARK_ARTIFACTS_ROOT }}"
          [ -n "${{ env.BENCHMARK_LOGS_ROOT }}" ] && mkdir -p "${{ env.BENCHMARK_LOGS_ROOT }}"
          [ -n "${{ env.BENCHMARK_SUMMARIES_ROOT }}" ] && mkdir -p "${{ env.BENCHMARK_SUMMARIES_ROOT }}"
        working-directory: ${{ github.workspace }}

      - name: Debug - Confirm Git Submodule Initialization
        run: git submodule update --init --recursive
        working-directory: ${{ github.workspace }}

      - name: Debug - Verify Git Submodule Initialization
        run: |
          git submodule status
          git submodule foreach 'echo $name $sha1 $sm_path'

      - name: Restore dependencies
        run: dotnet restore "${{ github.workspace }}/BenchmarkingSandbox.sln"

      - name: Compile BenchmarkingSandbox Runner
        run: dotnet build "${{ github.workspace }}/Src/Benchmarking.Runner/BenchmarkingSandbox.Runner.csproj" --configuration Release

      - name: Generate SHA Reference
        run: echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore Dependencies
        run: dotnet restore "${{ github.workspace }}/BenchmarkingSandbox.sln"

      - name: Build Test Projects
        run: dotnet build "${{ github.workspace }}/BenchmarkingSandbox.sln" --configuration Release

      - name: Run xUnit Tests
        run: dotnet test "${{ github.workspace }}/Tests/Benchmarking.Tests/BenchmarkingSandbox.Tests.csproj" --logger "trx;LogFileName=test-results.trx" --results-directory "${{ env.RESULTS_DIR }}"

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ env.RESULTS_DIR }}

  benchmark:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository with Submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Validate Submodule Integrity
        run: |
          if [ ! -d "${{ env.PROJECT_DIR }}/Async.Locks" ]; then
            echo "Submodule Async.Locks is missing! Exiting..."
            exit 1
          fi

      - name: Update Submodules
        run: git submodule update --init --recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore Dependencies for Benchmarking
        run: dotnet restore "${{ github.workspace }}/BenchmarkingSandbox.sln"

      - name: Compile Benchmarking Project
        run: dotnet build "${{ github.workspace }}/Src/Benchmarking.Runner/BenchmarkingSandbox.Runner.csproj" --configuration Release

      - name: Run Benchmarks
        run: dotnet run --project "${{ github.workspace }}/Src/Benchmarking.Runner/BenchmarkingSandbox.Runner.csproj" --configuration Release -- --filter *Benchmark*
        working-directory: ${{ github.workspace }}/Src/Benchmarking.Runner
        timeout-minutes: 3


      - name: Store and Upload Benchmark Results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: ${{ env.BENCHMARK_RESULTS_DIR }}

      - name: Generate Summary for PRs
        run: |
          echo "### Benchmark Results for SHA $SHA" >> ${{ env.PR_SUMMARY_PATH }}
          cat ${{ env.BENCHMARK_RESULTS_DIR }}/* >> ${{ env.PR_SUMMARY_PATH }}

      - name: Upload Summary
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-summary
          path: ${{ env.PR_SUMMARY_PATH }}
