name: Debug CI/CD Pipeline

on:
  push:
    branches:
      - Debug
  pull_request:

env:
  DOTNET_VERSION: "9.0.x"
  RESULTS_DIR: "${{ github.workspace }}/TestResults"
  BENCHMARK_RESULTS_DIR: "${{ github.workspace }}/BenchmarkResults"
  PR_SUMMARY_PATH: "${{ github.workspace }}/benchmark-summary.md"
  PROJECT_DIR: "${{ github.workspace }}/Src"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository with Submodules
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

#      # Debugging Steps
      - name: Debug - Verify Installed .NET Version
        run: dotnet --version

      - name: Debug - Environment Variables
        run: |
          echo "GITHUB_WORKSPACE: ${{ github.workspace }}"
          echo "RUNNER_OS: ${{ runner.os }}"
          echo "BENCHMARK_ARTIFACTS_ROOT: ${{ env.BENCHMARK_ARTIFACTS_ROOT }}"

      - name: Create Logs Directory
        run: mkdir -p ${{ env.BENCHMARK_LOGS_ROOT }}
        working-directory: ${{ github.workspace }}

      - name: Debug - Print Working Directory (Before Run)
        run: pwd
        working-directory: ${{ github.workspace }}

      - name: Create Artifacts Directory
        run: mkdir -p ${{ env.BENCHMARK_ARTIFACTS_ROOT }}
        working-directory: ${{ github.workspace }}

      - name: Debug - Verify Directory Creation
        run: |
          ls -l ${{ env.BENCHMARK_ARTIFACTS_ROOT }}
          ls -l ${{ env.BENCHMARK_LOGS_ROOT }}
          ls -l ${{ env.BENCHMARK_SUMMARIES_ROOT }}

      - name: Debug - Confirm Git Submodule Initialization
        run: git submodule update --init --recursive
        working-directory: ${{ github.workspace }}
        env:
          GIT_SUBMODULE_STRATEGY: recursive

      - name: Debug - Verify Git Submodule Initialization
        run: |
          git submodule status
          git submodule foreach 'echo $name $sha1 $sm_path'
          git submodule foreach 'git rev-parse --short HEAD'
          git submodule foreach 'git status'
  
      - name: Debug - Log System Information
        run: |
          uname -a
          df -h
          free -h
          ls -l ${{ github.workspace }}
          ls -l ${{ github.workspace }}/Src
          ls -l ${{ github.workspace }}/Src/Benchmarking.Runner
          ls -l ${{ github.workspace }}/Src/Benchmarking.Runner/BenchmarkingSandbox.Runner.csproj

      - name: Restore dependencies
        run: dotnet restore BenchmarkingSandbox.sln
        working-directory: ${{ github.workspace }}

      - name: Compile BenchmarkingSandbox
        run: dotnet build "${{ github.workspace }}/Src/Benchmarking.Runner/BenchmarkingSandbox.Runner.csproj" --configuration Release

      - name: Generate SHA Reference
        run: echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore Dependencies
        run: dotnet restore "${{ github.workspace }}/BenchmarkingSandbox.sln"

      - name: Build Test Projects
        run: dotnet build "${{ github.workspace }}/BenchmarkingSandbox.sln" --configuration Release

      - name: Run xUnit Tests
        run: dotnet test "${{ github.workspace }}/Tests/Benchmarking.Tests/BenchmarkingSandbox.Tests.csproj" --logger "trx;LogFileName=test-results.trx" --results-directory "${{ env.RESULTS_DIR }}"

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ env.RESULTS_DIR }}

  benchmark:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository with Submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Validate Submodule Integrity
        run: |
          if [ ! -d "${{ env.PROJECT_DIR }}/Async.Locks" ]; then
            echo "Submodule Async.Locks is missing! Exiting..."
            exit 1
          fi

      - name: Update Submodules
        run: git submodule update --init --recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore Dependencies for Benchmarking
        run: dotnet restore "${{ github.workspace }}/BenchmarkingSandbox.sln"

      - name: Compile Benchmarking Project
        run: dotnet build "${{ github.workspace }}/Src/Benchmarking.Runner/BenchmarkingSandbox.Runner.csproj" --configuration Release

      - name: Run Benchmarks
        run: dotnet run --project "${{ github.workspace }}/Src/Benchmarking.Runner/BenchmarkingSandbox.Runner.csproj" --configuration Release -- --filter *Benchmark*
        working-directory: ${{ github.workspace }}/Src/Benchmarking.Runner
        timeout-minutes: 3


      - name: Store and Upload Benchmark Results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: ${{ env.BENCHMARK_RESULTS_DIR }}

      - name: Generate Summary for PRs
        run: |
          echo "### Benchmark Results for SHA $SHA" >> ${{ env.PR_SUMMARY_PATH }}
          cat ${{ env.BENCHMARK_RESULTS_DIR }}/* >> ${{ env.PR_SUMMARY_PATH }}

      - name: Upload Summary
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-summary
          path: ${{ env.PR_SUMMARY_PATH }}
